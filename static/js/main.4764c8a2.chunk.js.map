{"version":3,"sources":["utils/transitionUtil.tsx","messages/messages.tsx","messages/i18n/en.js","utils/pageUtils.js","components/sideNavigationBar/SideNavigationBar.tsx","components/mainContent/homePage/HomePage.tsx","components/mainContent/resumePage/Experience.tsx","components/mainContent/resumePage/Education.tsx","components/mainContent/resumePage/ResumePage.tsx","components/mainContent/projectsPage/Project.tsx","components/mainContent/projectsPage/ProjectsPage.tsx","components/mainContent/MainContent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useTransitionEffect","timeout","useState","showContent","setShowContent","useEffect","setTimeout","messages","sideNavigationBar","home","about","resume","linkedIn","email","projects","resumePage","experience","education","skills","courses","projectsPage","aboutJingcheng","snbm","pageItems","pagePathMap","pathPageMap","_","invert","SideBarHeader","Menu","Header","className","SideBarMenuItems","props","history","useHistory","pathname","useLocation","vertical","fluid","text","size","menuItems","map","item","Item","content","key","active","activeItem","onClick","setActiveItem","push","goToPage","SideBarContactIcon","iconName","href","target","rel","Icon","name","contactInfo","SideBarContactIcons","Container","info","idx","CopyRightFooter","SideNavigationBar","showSidebar","setShowSidebar","showItems","setShowItems","Sidebar","animation","visible","width","Transition","duration","Divider","horizontal","section","HomePage","sideBarReady","hidden","textAlign","Experience","as","employerName","title","List","bulleted","descriptions","dsc","Education","degree","major","school","classOf","rm","resumeSubTitles","dummyExperience","experiences","ResumeSubTitleLinks","subTitle","smooth","to","toLowerCase","ExperienceSection","id","exp","length","EducationSection","edu","ResumePage","ProjectItem","project","index","projectStackSection","stack","Extra","join","projectSourceSection","sourceHref","Content","Statistic","value","toString","padStart","Meta","date","Description","desc","Image","src","imgSrc","projectHref","pm","dummyProject","projectList","ProjectsContent","Group","divided","Project","ProjectsPage","MainContent","exact","path","App","setSideBarReady","Pushable","Segment","Pusher","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4764c8a2.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\n/** Each animation should take 500ms */\nexport const animationDuration = 500;\n\n/** Hook for animation */\nexport const useTransitionEffect = (timeout?: number) => {\n  const [showContent, setShowContent] = useState(false);\n  useEffect(\n    () => {\n      !showContent && setTimeout(() => {\n        setShowContent(true)\n      }, timeout || 0);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n  return showContent;\n};","import { sideNavigationBar, resumePage, projectsPage } from 'messages/i18n/en';\n\nconst messages = {\n    sideNavigationBar,\n    resumePage,\n    projectsPage,\n}\n\nexport default messages;","export const sideNavigationBar = {\n  home: 'Home',\n  about: 'About',\n  resume: 'Resume',\n  linkedIn: 'LinkedIn',\n  email: 'Email',\n  projects: 'Projects',\n};\n\nexport const resumePage = {\n  resume: 'RESUME',\n  experience: 'EXPERIENCE',\n  education: 'EDUCATION',\n  skills: 'SKILLS',\n  courses: 'COURSES',\n}\n\nexport const projectsPage = {\n  projects: 'PROJECTS',\n  aboutJingcheng: 'About | Jingcheng',\n}","import _ from 'lodash';\n\nimport messages from 'messages/messages';\n\nconst { sideNavigationBar: snbm } = messages;\nexport const pageItems = [\n  snbm.home,\n  snbm.about,\n  snbm.projects,\n  snbm.resume,\n];\n\nexport const pagePathMap = {\n  [snbm.home]: '/',\n  [snbm.about]: '/about',\n  [snbm.projects]: '/projects',\n  [snbm.resume]: '/resume',\n};\n\nexport const pathPageMap = _.invert(pagePathMap);","import React, { useState } from 'react';\nimport { Sidebar, Menu, Divider, Transition, Container, Icon, SemanticICONS } from 'semantic-ui-react';\nimport { useHistory, useLocation } from 'react-router-dom'\n\n\nimport { animationDuration } from 'utils/transitionUtil';\nimport { pagePathMap, pageItems, pathPageMap } from 'utils/pageUtils';\n\nimport 'components/sideNavigationBar/sideNavigationBar.css';\n\n\n\n\nconst SideBarHeader = () => (\n  <Menu.Header>\n    <div className=\"name\">Jingcheng Zhang</div>\n    <div className=\"title\">Software Engineer</div>\n    <div className=\"employer\">@ Amazon Web Services</div>\n  </Menu.Header>\n);\n\ninterface ISideBarMenuItemsProps {\n  menuItems: string[];\n  activeItem?: string;\n  setActiveItem?: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst SideBarMenuItems = (props: ISideBarMenuItemsProps) => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const goToPage = (item: string) => pagePathMap[item] && pathname !== pagePathMap[item] && history.push(pagePathMap[item]);\n  const getMenuItem = (item: string) => {\n    const onClick = () => {\n      if (props.setActiveItem && item) {\n        props.setActiveItem(item);\n        goToPage(item);\n      }\n    };\n    return (\n      <Menu.Item\n        content={<span>{item}</span>}\n        key={item}\n        active={item === props.activeItem}\n        onClick={onClick}\n      />\n    );\n  };\n  return (\n    <Menu vertical fluid text size='massive'>\n      {props.menuItems.map(getMenuItem)}\n    </Menu>\n  );\n};\n\ninterface ISideBarContactIconProps {\n  iconName: SemanticICONS;\n  href: string;\n};\n\nconst SideBarContactIcon = ({ iconName, href }: ISideBarContactIconProps) => (\n  <a\n    target=\"_blank\"\n    rel='noopener noreferrer'\n    href={href}\n  >\n    <Icon name={iconName} size=\"big\" />\n  </a>\n);\n\nconst contactInfo: ISideBarContactIconProps[] = [\n  {\n    iconName: 'linkedin',\n    href: 'https://www.linkedin.com/in/jingcheng-zhang/',\n  },\n  {\n    iconName: 'github',\n    href: 'https://github.com/jesse7zhangjc',\n  },\n  {\n    iconName: 'angellist',\n    href: 'https://angel.co/u/jingcheng-zhang',\n  },\n  {\n    iconName: 'mail outline',\n    href: 'mailto:jingcheng.zhang@nyu.edu',\n  },\n];\n\nconst SideBarContactIcons = () => (\n  <Container className=\"contact-icon-container\" fluid>\n    <div>\n      {contactInfo.map((info, idx) => <SideBarContactIcon key={idx} {...info} />)}\n    </div>\n  </Container>\n);\n\nconst CopyRightFooter = () => (\n  <div className=\"copy-right-footer\">\n    <p>© 2020 Jingcheng Zhang</p>\n    <p>Built from scratch with React</p>\n  </div>\n);\n\nconst SideNavigationBar = () => {\n  const [activeItem, setActiveItem] = useState(pageItems[0]);\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [showItems, setShowItems] = useState(false);\n  const { pathname } = useLocation();\n  pathPageMap[pathname] && activeItem !== pathPageMap[pathname] && setActiveItem(pathPageMap[pathname]);\n  setTimeout(() => setShowSidebar(true));\n  setTimeout(() => setShowItems(true), animationDuration);\n  return (\n    <Sidebar animation=\"push\" visible={showSidebar} width=\"wide\">\n      <Transition visible={showItems} animation=\"fade up\" duration={500}>\n        <Container fluid>\n          <Divider className=\"top-divider\" horizontal section />\n          <SideBarHeader />\n          <Divider horizontal section/>\n          <SideBarMenuItems menuItems={pageItems} activeItem={activeItem} setActiveItem={setActiveItem} />\n          <Divider horizontal section />\n          <SideBarContactIcons />\n        </Container>\n      </Transition>\n      <CopyRightFooter />\n    </Sidebar>\n  );\n};\n\n\n\nexport default SideNavigationBar;","import React from 'react';\nimport { Container, Divider, Header, Transition } from 'semantic-ui-react';\n\nimport { useTransitionEffect, animationDuration } from 'utils/transitionUtil';\nimport { IMainContentProps } from 'components/mainContent/MainContent';\n\nimport 'components/mainContent/homePage/homePage.css';\n\ntype IHomePageProps = IMainContentProps;\n\nconst HomePage = (props: IHomePageProps) => {\n  const showContent = useTransitionEffect(props.sideBarReady ? 0 : animationDuration);\n  return (\n    <Transition animation=\"fade right\" duration={animationDuration} visible={showContent}>\n      <Container className=\"home-page\">\n        <Divider section hidden className=\"top-divider\" />\n        <Container className=\"home-page-content-container\" textAlign=\"justified\">\n          <Header size=\"large\">Hi there, I'm Jingcheng.</Header>\n          <Header size=\"small\">I like building things. I am a NYU graduate and a Software Development Engineer at Amazon Web Services. Before Amazon, I was at Byton, Faraday Future and BYD Coach and Bus building web apps to improve EV manufacturing experience.</Header>\n        </Container>\n      </Container>\n    </Transition>\n  );\n};\n\nexport default HomePage;","import React from 'react';\nimport { Container, Header, List } from 'semantic-ui-react';\n\nexport interface IExperienceProps {\n  employerName: string,\n  title: string,\n  duration: string,\n  descriptions: string[],\n};\n\nconst Experience = (props: IExperienceProps) => {\n  return (\n    <Container>\n      <div className=\"resume-exp-item-employer-title\">\n        <Header className=\"resume-exp-item-employer\" as=\"span\">{props.employerName}</Header>\n        <Header className=\"resume-exp-item-dash\" as=\"span\">-</Header>\n        <Header className=\"resume-exp-item-title\" as=\"span\">{props.title}</Header>\n      </div>\n      <Header className=\"resume-exp-item-duration\" as=\"h5\">{props.duration}</Header>\n      <List bulleted className=\"resume-exp-item-desc-list\">\n        {props.descriptions.map((dsc, idx) => <List.Item key={idx} className=\"resume-exp-item-desc-item\">{dsc}</List.Item>)}\n      </List>\n    </Container>\n  );\n};\n\nexport default Experience;","import React from 'react';\nimport { Container, Header } from 'semantic-ui-react';\n\nexport interface IEducationProps {\n  degree: string;\n  major: string;\n  school: string;\n  classOf: number;\n}\n\nconst Education = (props: IEducationProps) => {\n  return (\n    <Container>\n      <div className=\"resume-edu-degree-major\">\n        <Header className=\"resume-edu-item-degree\" as=\"span\" size=\"small\">{`${props.degree}`}</Header>\n        <Header className=\"resume-edu-item-in\" as=\"span\" size=\"small\">in</Header>\n        <Header className=\"resume-edu-item-major\" as=\"span\" size=\"small\">{`${props.major}`}</Header>\n      </div>\n      <div className=\"resume-edu-school-class\">\n        <Header className=\"resume-edu-item-school\" as=\"span\" size=\"small\">{props.school}</Header>\n        <Header className=\"resume-edu-item-comma\" as=\"span\" size=\"small\">,</Header>\n        <Header className=\"resume-edu-item-class\" as=\"span\" size=\"small\">{props.classOf}</Header>\n      </div>\n    </Container>\n  );\n};\n\nexport default Education;","import React from 'react';\nimport { Container, Header, Divider, Transition } from 'semantic-ui-react';\n\nimport messages from 'messages/messages';\nimport Experience, { IExperienceProps } from 'components/mainContent/resumePage/Experience';\nimport Education, { IEducationProps } from 'components/mainContent/resumePage/Education';\n\nimport 'components/mainContent/resumePage/resumePage.css'\nimport { useTransitionEffect, animationDuration } from 'utils/transitionUtil';\nimport { HashLink } from 'react-router-hash-link';\nimport { IMainContentProps } from '../MainContent';\n\nconst {resumePage: rm} = messages;\nconst resumeSubTitles = [\n  rm.experience,\n  rm.education,\n  // TODO: add in skills section\n  // rm.skills,\n];\n\nconst dummyExperience = {\n  employerName: 'Amazon Web Services',\n  title: 'Software Development Engineer',\n  duration: 'November 2019 - Present',\n  descriptions: [\n    'Deployed quantitative strategies to predict the value of fine art in various pricing contexts',\n    'Built production, on-line, end-to-end optimized machine learning pipelines with Pandas, Numpy, Scikit, Tensorflow, Dagster, Postgres, etc. on GCP with Kubernetes',\n    'Designed micro-service architecture around: data collection, data integrity, feature engineering, research, strategy, backtesting, deployment, and reporting',\n  ],\n};\n\nconst experiences: IExperienceProps[] = [\n  dummyExperience,\n  dummyExperience,\n  dummyExperience,\n  dummyExperience,\n  dummyExperience,\n];\n\nconst education: IEducationProps[] = [\n  {\n    degree: 'M.S.',\n    major: 'Industrial Engineering',\n    school: 'New York University',\n    classOf: 2015,\n  },\n];\n\nconst ResumeSubTitleLinks = () => (\n  <div className=\"subtitles\">\n    {resumeSubTitles.map(subTitle => (\n      <Header className=\"resume-subtitle-link\" size=\"small\" key={subTitle} as=\"span\">\n        <HashLink smooth to={`/resume#${subTitle.toLowerCase()}-section`}>{subTitle}</HashLink>\n      </Header>\n    ))}\n  </div>\n);\n\nconst ExperienceSection = () => {\n  return (\n    <div id=\"experiment-section\">\n      <Header className=\"resume-subtitle\" size=\"large\">{rm.experience}</Header>\n      {experiences.map((exp, idx) => (\n        <div key={idx}>\n          <Experience {...exp} />\n          {idx !== experiences.length && <Divider hidden section/>}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst EducationSection = () => {\n  return (\n    <div id=\"education-section\">\n      <Header className=\"resume-subtitle\" size=\"large\">{rm.education}</Header>\n      {education.map((edu, idx) => (\n        <div key={idx}>\n          <Education {...edu} />\n          {idx !== experiences.length && <Divider hidden section/>}\n        </div>\n      ))}\n    </div>\n  );\n};\n\ntype IResumePageProps = IMainContentProps;\n\nconst ResumePage = (props: IResumePageProps) => {\n  const showContent = useTransitionEffect(props.sideBarReady ? 0 :animationDuration);\n  return (\n    <Transition animation=\"fade right\" duration={animationDuration} visible={showContent}>\n      <Container className=\"resume-page\">\n        <Divider section hidden />\n        <Header className=\"resume-title\" size=\"huge\">{rm.resume}</Header>\n        <Divider hidden />\n        <ResumeSubTitleLinks />\n        <Divider />\n        <Divider hidden section/>\n        <ExperienceSection />\n        <Divider hidden section/>\n        <EducationSection />\n      </Container>\n    </Transition>\n  );\n};\n\nexport default ResumePage;","import React from 'react';\nimport { Item, Statistic, Icon } from 'semantic-ui-react';\n\nexport interface IProject {\n  projectHref: string,\n  sourceHref?: string,\n  name: string,\n  date: string,\n  desc: string,\n  imgSrc: string,\n  stack?: string[],\n};\n\ninterface IProjectItemProps {\n  project: IProject,\n  index: number,\n}\n\nconst ProjectItem = ({ project, index }: IProjectItemProps) => {\n  const projectStackSection = project.stack &&\n    project.stack.length > 0 &&\n    <Item.Extra className=\"project-item-stack\">{`Stack: ${project.stack.join(', ')}`}</Item.Extra>;\n  const projectSourceSection = project.sourceHref &&\n    <Item.Extra className=\"project-item-stack\" as=\"a\" href={project.sourceHref} target='_blank' rel=\"noopener noreferrer\">\n      <Icon name=\"github\"/>\n      <span>Source code</span>\n    </Item.Extra>;\n  return (\n    <Item className=\"project-item\">\n      <Item.Content className=\"project-item-content\">\n        <Statistic className={'project-item-index'} value={index.toString().padStart(2, '0')} size=\"small\" />\n        <Item.Header className=\"project-item-header\" as=\"div\">{project.name}</Item.Header>\n        <Item.Meta className=\"project-item-date\">{project.date}</Item.Meta>\n        <Item.Description className=\"project-item-desc\">{project.desc}</Item.Description>\n        {projectStackSection}\n        {projectSourceSection}\n      </Item.Content>\n      <Item.Image src={project.imgSrc} size=\"big\" as=\"a\" target=\"_blank\" rel=\"noopener noreferrer\" href={project.projectHref} />\n    </Item>\n  );\n};\n\nexport default ProjectItem;","import React from 'react';\nimport { Container, Header, Divider, Transition, Item } from 'semantic-ui-react';\n\nimport messages from 'messages/messages';\nimport { useTransitionEffect, animationDuration } from 'utils/transitionUtil';\nimport { IMainContentProps } from 'components/mainContent/MainContent';\nimport ProjectItem, { IProject } from 'components/mainContent/projectsPage/Project';\n\nimport 'components/mainContent/projectsPage/projectsPage.css'\n\nconst { projectsPage: pm } = messages;\nconst dummyProject = {\n  name: 'About | Jingcheng',\n  date: 'July, 2020',\n  sourceHref: 'https://github.com/jesse7zhangjc/about-jingcheng',\n  projectHref: 'https://github.com/jesse7zhangjc/about-jingcheng',\n  desc: 'A simple personal website built from scratch with React',\n  imgSrc: 'assets/images/projects/aboutJingchengPreview.png',\n  stack: ['React', 'Semantic UI React']\n};\nconst projectList: IProject[] = [\n  dummyProject,\n  dummyProject,\n  dummyProject,\n  dummyProject,\n];\n\nconst ProjectsContent = () => {\n  return (\n    <Item.Group divided>\n      {projectList.map((project, index) => <ProjectItem key={index} index={index + 1} project={project} />)}\n    </Item.Group>\n  );\n};\n\ntype IProjectsPageProps = IMainContentProps;\n\nconst ProjectsPage = (props: IProjectsPageProps) => {\n  const showContent = useTransitionEffect(props.sideBarReady ? 0 :animationDuration);\n  return (\n    <Transition animation=\"fade right\" duration={animationDuration} visible={showContent}>\n      <Container className=\"projects-page\">\n        <Divider section hidden />\n        <Header className=\"projects-title\" size=\"huge\">{pm.projects}</Header>\n        <Divider hidden />\n        <Divider />\n        <ProjectsContent />\n      </Container>\n    </Transition>\n  );\n};\n\nexport default ProjectsPage;","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport HomePage from 'components/mainContent/homePage/HomePage';\nimport ResumePage from 'components/mainContent/resumePage/ResumePage';\nimport ProjectsPage from 'components/mainContent/projectsPage/ProjectsPage';\n\nimport 'components/mainContent/mainContent.css';\n\nexport interface IMainContentProps {\n  sideBarReady?: boolean;\n};\n\nconst MainContent = (props: IMainContentProps) => {\n  return (\n    <div className=\"main-content\">\n      <Switch>\n        <Route exact path=\"/\"><HomePage {...props} /></Route>\n        <Route exact path=\"/resume\"><ResumePage {...props} /></Route>\n        <Route exact path=\"/projects\"><ProjectsPage {...props} /></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default MainContent;\n","import React, { useState } from 'react';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Sidebar, Segment } from 'semantic-ui-react';\n\nimport { animationDuration } from 'utils/transitionUtil';\nimport SideNavigationBar from 'components/sideNavigationBar/SideNavigationBar';\nimport MainContent from 'components/mainContent/MainContent';\n\nimport 'semantic-ui-css/semantic.min.css'\n\nconst App = () => {\n  const [sideBarReady, setSideBarReady] = useState(false);\n  setTimeout(() => {\n    !sideBarReady && setSideBarReady(true);\n  }, animationDuration);\n  return (\n    <Router>\n        <Sidebar.Pushable as={Segment}>\n          <SideNavigationBar />\n          <Sidebar.Pusher>\n          <MainContent sideBarReady={sideBarReady} />\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}